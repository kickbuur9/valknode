apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet-server
  labels:
    app: fleet-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleet-server
  template:
    metadata:
      labels:
        app: fleet-server
    spec:
      containers:
        - name: fleet-server
          image: docker.elastic.co/beats/elastic-agent:9.1.0
            #          args: ["run"]
          env:
            - name: FLEET_SERVER_ENABLE
              value: "1"
            - name: FLEET_ENROLL
              value: "1"
            - name: FLEET_SERVER_HOST
              value: "0.0.0.0"
            - name: FLEET_SERVER_PORT
              value: "8220"
            # IMPORTANT: Replace this with your actual Fleet Enrollment Token from Kibana
            - name: FLEET_ENROLLMENT_TOKEN
              value: "N2xHTFFKZ0JYdVVfZllLczZZdEU6RS1uS1djWFhTRTZpNkN4ckdubVQyUQ=="
            # CA certificate for Fleet Server's own SSL and for trusting Kibana/Elasticsearch
            # This assumes your domain.cert.pem is the CA for itself.
            - name: FLEET_CA
              value: "/etc/certs/domain.cert.pem"
            - name: KIBANA_FLEET_CA
              value: "/etc/certs/domain.cert.pem"
            - name: ELASTICSEARCH_CA
              value: "/etc/certs/domain.cert.pem"
            # Explicitly set Elasticsearch and Kibana hosts to their FQDNs with HTTPS
            - name: ELASTICSEARCH_HOST
              value: "https://elasticsearch.kickb.dev:9200" # Explicitly set to FQDN
            - name: KIBANA_FLEET_HOST
              value: "https://kibana.kickb.dev:5601"       # Explicitly set to FQDN
            # The URL agents will use to connect to Fleet Server
            - name: FLEET_URL
              value: "https://fleet-server.kickb.dev:8220" # Explicitly set to FQDN
            # Fleet Server's own certificate and key
            - name: FLEET_SERVER_CERT
              value: "/etc/certs/domain.cert.pem"
            - name: FLEET_SERVER_CERT_KEY
              value: "/etc/certs/private.key.pem"
          ports:
            - containerPort: 8220
              name: https
          volumeMounts:
            # Mount the shared elasticsearch-cert secret
            - name: certs
              mountPath: "/etc/certs" # Mount to /etc/certs as used in env vars
              readOnly: true
            # Mount the Fleet Server configuration ConfigMap
            - name: fleet-server-config
              mountPath: /usr/share/elastic-agent/fleet.yml
              subPath: fleet.yml
              readOnly: true
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1024Mi"
              cpu: "500m"
      volumes:
        # Use the existing elasticsearch-cert secret
        - name: certs
          secret:
            secretName: elasticsearch-cert
            items:
              - key: tls.crt
                path: domain.cert.pem
              - key: tls.key
                path: private.key.pem
        # Mount the Fleet Server ConfigMap
        - name: fleet-server-config
          configMap:
            name: fleet-server-config
