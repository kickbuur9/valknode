apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.19.0
          ports:
            - containerPort: 5601
              name: http
          env:
            # This service account token is used by Kibana to authenticate with Elasticsearch.
            # It should be generated within Elasticsearch and kept secure.
            - name: ELASTICSEARCH_SERVICEACCOUNTTOKEN
              value: "AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYS10b2tlbjpETDRhclFXRlNoQ1ZDZFU4b0p2Zy1B"
          volumeMounts:
            # Mount the certificates for Kibana's own SSL and for connecting to Elasticsearch
            - name: certs
              mountPath: /usr/share/kibana/config/certs
              readOnly: true
            # Mount the Kibana configuration file
            - name: kibana-config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
              readOnly: true
      volumes:
        # Define the volume for certificates, pulling from the 'elasticsearch-cert' secret
        # This secret is assumed to contain 'tls.crt' (your domain's cert, potentially with chain)
        # and 'tls.key' (your domain's private key).
        - name: certs
          secret:
            secretName: elasticsearch-cert
            items:
              # Your domain's public certificate (which may include the full chain)
              - key: tls.crt
                path: domain.cert.pem
              # Your domain's private key
              - key: tls.key
                path: private.key.pem
        # Define the volume for Kibana's configuration, pulling from the 'kibana-config' ConfigMap
        - name: kibana-config
          configMap:
            name: kibana-config
