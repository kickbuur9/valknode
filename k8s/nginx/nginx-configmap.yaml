apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user  root;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /tmp/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include        /etc/nginx/mime.types;
        default_type  application/octet-stream;

        sendfile        on;
        keepalive_timeout  65;

        upstream wagtail_upstream {
            server wagtail-service:80;
        }

        server {
            listen 443 ssl;
            server_name kickb.dev;

            ssl_certificate /etc/nginx/certs/tls.crt;
            ssl_certificate_key /etc/nginx/certs/tls.key;

            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers HIGH:!aNULL:!MD5;
            ssl_prefer_server_ciphers on;

            location = /robots.txt {
                alias /vol/web/static/robots.txt;
            }

            location = /.well-known/security.txt {
                alias /vol/web/static/well-known/security.txt;
            }

            location ^~ /.well-known/ {
                return 302 /.well-known/security.txt;
            }

            location ^~ /static/ {
                alias /vol/web/static/;
                expires 30d;
                add_header Cache-Control "public, max-age=2592000";
            }

            location ^~ /media/ {
                alias /vol/web/media/;
                expires 7d;
                add_header Cache-Control "public, max-age=604800";
            }

            location / {
                proxy_pass http://wagtail_upstream;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_redirect off;
                proxy_buffering off;
                proxy_read_timeout 90;
            }
        }
    }
